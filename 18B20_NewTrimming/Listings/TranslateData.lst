C51 COMPILER V9.60.0.0   TRANSLATEDATA                                                     05/06/2023 12:08:18 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TRANSLATEDATA
OBJECT MODULE PLACED IN .\Objects\TranslateData.obj
COMPILER INVOKED BY: D:\Software\Keil\C51\BIN\C51.EXE TranslateData.c LARGE OPTIMIZE(4,SPEED) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\TranslateData.lst) TABS(2) OBJECT(.\Objects\TranslateData.obj)

line level    source

   1          #include <TranslateData.h>
   2          #include <stdio.h>
   3          #include <string.h>
   4          #include <stdlib.h>
   5          
   6          char nSendData[30];
   7          char nRxData[200]; //接收来自总控制MCU发来的数据
   8          bit bBoardIsHere,bTestEndFlag;
   9          int VBE;
  10          int Rotation;
  11          unsigned char Version;
  12          
  13          void UartOneInit(char nBtr){  
  14   1        SCON = 0x50;    //8位数据,可变波特率
  15   1        AUXR |= 0x40;   //定时器1时钟为Fosc,即1T
  16   1        AUXR &= 0xfe;   //串口1选择定时器1为波特率发生器
  17   1        TMOD &= 0x0f;   //设定定时器1为16位自动重装方式
  18   1        
  19   1        if(nBtr == BTR115200){
  20   2          TL1 = 0xd0;     //设定定时初值
  21   2          TH1 = 0xff;     //设定定时初值
  22   2        }
  23   1        
  24   1        if(nBtr == BTR57600){
  25   2          TL1 = 0xa0;     //设定定时初值
  26   2          TH1 = 0xff;     //设定定时初值
  27   2        }
  28   1        
  29   1        if(nBtr == BTR38400){
  30   2          TL1 = 0x70;     //设定定时初值
  31   2          TH1 = 0xff;     //设定定时初值
  32   2        }
  33   1        
  34   1        if(nBtr == BTR19200){
  35   2          TL1 = 0xe0;     //设定定时初值
  36   2          TH1 = 0xfe;     //设定定时初值
  37   2        }
  38   1        
  39   1        if(nBtr == BTR9600){
  40   2          TL1 = 0xc0;     //设定定时初值
  41   2          TH1 = 0xfd;     //设定定时初值
  42   2        }
  43   1        
  44   1        if(nBtr == BTR4800){
  45   2          TL1 = 0x80;     //设定定时初值
  46   2          TH1 = 0xfb;     //设定定时初值
  47   2        }
  48   1        
  49   1        if(nBtr == BTR2400){
  50   2          TL1 = 0x00;     //设定定时初值
  51   2          TH1 = 0xf7;     //设定定时初值
  52   2        }
  53   1        
  54   1        if(nBtr == BTR1200){
C51 COMPILER V9.60.0.0   TRANSLATEDATA                                                     05/06/2023 12:08:18 PAGE 2   

  55   2          TL1 = 0x00;     //设定定时初值
  56   2          TH1 = 0xee;     //设定定时初值
  57   2        }
  58   1        
  59   1        ET1 = 0;      //禁止定时器1中断
  60   1        TR1 = 1;      //启动定时器1
  61   1      }
  62          
  63          /**
  64          *** 函数名称 ： SendTempDataToContrlMcu
  65          *** 函数功能 ： 以十六进制的形式发送字符串到总控制MCU
  66          *** 入口参数 ： 1、*pIntData指向待发送的整型数组
  67          ***             2、nIntDataCunt发送数据的个数
  68          *** 返回值   ： 无
  69          */
  70          void SendTempDataToContrlMcu(int *pIntData,unsigned char nIntDataCunt) 
  71          {
  72   1        unsigned char nCunt = 0,nLowByte;
  73   1        char nHighByte;
  74   1        int nTempIntData = 0;
  75   1        unsigned char nRxDataCunt = 0;
  76   1        
  77   1        RI = 0x00;
  78   1        while(1){
  79   2          if(RI){
  80   3            RI = 0x00;
  81   3            
  82   3            if(SBUF == 0x02) // 总控制MCU请求发送温度的命令0x02
  83   3            break;
  84   3          }
  85   2        }
  86   1        
  87   1        TI = 0;
  88   1        for(nCunt = 0; nCunt < nIntDataCunt; nCunt++){
  89   2          nTempIntData = pIntData[nCunt];
  90   2          nLowByte = nTempIntData;
  91   2          nHighByte = nTempIntData >> 0x08;
  92   2          
  93   2          SBUF = nHighByte;
  94   2          while(TI != 1);
  95   2          TI = 0;
  96   2          
  97   2          SBUF = nLowByte;
  98   2          while(TI != 1);
  99   2          TI = 0;
 100   2        }
 101   1      }
 102          
 103          void RxDataInterrupt() interrupt 4 using 3 //接收来自总控制MCU发来的数据，串口1
 104          {
 105   1        unsigned char nRxDataCunt = 0;
 106   1        ES = 0x00; // 关闭串口中断，接下来采用查询方式接收数据
 107   1        while(1){
 108   2          if(RI){ // 等待数据到
 109   3            RI = 0;
 110   3            
 111   3            nRxData[nRxDataCunt] = SBUF; // 保存接收到的数据
 112   3            if(nRxData[nRxDataCunt] == '@')
 113   3            break;
 114   3            
 115   3            nRxDataCunt++;
 116   3          }
C51 COMPILER V9.60.0.0   TRANSLATEDATA                                                     05/06/2023 12:08:18 PAGE 3   

 117   2        }
 118   1        
 119   1        if(strstr(nRxData,"IS?") != NULL){ // 总控制板询问本板是否存在,
 120   2          TI = 0;
 121   2          SBUF = 'Y'; // 发送存在响应
 122   2          while(!TI);
 123   2          TI = 0;
 124   2          
 125   2          bBoardIsHere = 0x01;
 126   2        }
 127   1        if(strstr(nRxData,"END") != NULL){ // 测试过程完成
 128   2          bTestEndFlag = 0x01;
 129   2        }
 130   1        
 131   1        else{
 132   2          bTestEndFlag = 0x00;
 133   2        }
 134   1      }
 135          
 136          /**
 137          *** 函数名称 ： GetPt100TempData
 138          *** 函数功能 ： 解析来自pt100的测温数据,共8个数据
 139          *** 入口参数 ： 无
 140          *** 返回值   ： 无
 141          */
 142          void GetPt100TempData(float *pPt100Data)
 143          {
 144   1        char nDataCunt = 0,nBitCunt = 0;
 145   1        unsigned char nRxDataCunt = 0;
 146   1        char nTempRxData[10];
 147   1        
 148   1        memset(nTempRxData,'\0',sizeof(nTempRxData));
 149   1        for(nDataCunt = 0; nDataCunt < 4; nDataCunt++){
 150   2          pPt100Data[nDataCunt] = 0.0;
 151   2        }
 152   1        
 153   1        RI = 0x00;
 154   1        while(1){
 155   2          if(RI){
 156   3            RI = 0x00;
 157   3            
 158   3            nRxData[nRxDataCunt] = SBUF;
 159   3            if(nRxData[nRxDataCunt] == '@')
 160   3              break;
 161   3            
 162   3            nRxDataCunt++;
 163   3          }
 164   2        }
 165   1        
 166   1        nRxDataCunt = 0;
 167   1        if(strstr(nRxData,"PT") != NULL){
 168   2          while(1){
 169   3            if(nRxData[nRxDataCunt] == ',')
 170   3            break;
 171   3            
 172   3            nRxDataCunt++;
 173   3          }
 174   2          nRxDataCunt++;
 175   2          
 176   2          for(nDataCunt = 0; nDataCunt < 4; nDataCunt++)
 177   2          {
 178   3            nBitCunt = 0;
C51 COMPILER V9.60.0.0   TRANSLATEDATA                                                     05/06/2023 12:08:18 PAGE 4   

 179   3            while(1){
 180   4              if((nRxData[nRxDataCunt] == ',') || (nRxData[nRxDataCunt] == '@'))
 181   4              break;
 182   4              
 183   4              nTempRxData[nBitCunt] = nRxData[nRxDataCunt];
 184   4              nBitCunt++;
 185   4              nRxDataCunt++;
 186   4            }
 187   3            nRxDataCunt++;
 188   3            pPt100Data[nDataCunt] = atof(nTempRxData);
 189   3            memset(nTempRxData,'\0',sizeof(nTempRxData));
 190   3          }
 191   2        }
 192   1      }
 193          
 194          /**
 195          *** 函数名称 ： SendTrimingProcessEnd
 196          *** 函数功能 ： 向总控制板发送修调过程完成
 197          *** 入口参数 ： 无
 198          *** 返回值   ： 无
 199          */
 200          void SendTrimingProcessEnd(void) 
 201          {
 202   1        RI = 0x00;
 203   1        TI = 0x00;
 204   1        while(1){
 205   2          if(RI){
 206   3            RI = 0x00;
 207   3            
 208   3            if(SBUF == '%'){
 209   4              SBUF = '%';
 210   4              while(!TI);
 211   4              TI = 0x00;
 212   4              break;
 213   4            }
 214   3          }
 215   2        }
 216   1      }
 217          
 218          void GetChipPackageType(char *nPackageType)
 219          {
 220   1        char nDataCunt = 0,nBitCunt = 0,nPkgData[10];
 221   1        unsigned char nRxDataCunt = 0;
 222   1        
 223   1        memset(nRxData,'\0',sizeof(nRxData));
 224   1        memset(nPkgData,'\0',sizeof(nPkgData));
 225   1        RI = 0x00;
 226   1        while(1){
 227   2          if(RI){
 228   3            RI = 0x00;
 229   3            
 230   3            nRxData[nRxDataCunt] = SBUF;
 231   3            if(nRxData[nRxDataCunt] == '@')
 232   3              break;
 233   3            
 234   3            nRxDataCunt++;
 235   3          }
 236   2        }
 237   1        
 238   1        nRxDataCunt = 0;
 239   1        if(strstr(nRxData,"PKG") != NULL){ // PWR,0@
 240   2          while(1){
C51 COMPILER V9.60.0.0   TRANSLATEDATA                                                     05/06/2023 12:08:18 PAGE 5   

 241   3            if(nRxData[nRxDataCunt] == ',')
 242   3            break;
 243   3            
 244   3            nRxDataCunt++;
 245   3          }
 246   2          nBitCunt = 0;
 247   2          nRxDataCunt++;
 248   2          
 249   2          while(1){
 250   3            if(nRxData[nRxDataCunt] == '@')
 251   3              break;
 252   3            
 253   3            nPkgData[nBitCunt] = nRxData[nRxDataCunt];
 254   3            nBitCunt++;
 255   3            nRxDataCunt++;
 256   3          }
 257   2          
 258   2          *nPackageType = atoi(nPkgData);
 259   2        }
 260   1      }
 261          //VBE,0xff,0x00@
 262          void GetVBEandRotationValues(void)
 263          {
 264   1        char nDataCunt = 0,nBitCunt = 0;
 265   1        unsigned char nRxDataCunt = 0;
 266   1        char nVBEData[10];
 267   1        
 268   1        memset(nRxData,'\0',sizeof(nRxData));
 269   1        memset(nVBEData,'\0',sizeof(nVBEData));
 270   1        
 271   1        RI = 0x00;
 272   1        while(1){
 273   2          if(RI){
 274   3            RI = 0x00;
 275   3            
 276   3            nRxData[nRxDataCunt] = SBUF;
 277   3            if(nRxData[nRxDataCunt] == '@')
 278   3              break;
 279   3            
 280   3            nRxDataCunt++;
 281   3          }
 282   2        }
 283   1        
 284   1        nRxDataCunt = 0;
 285   1        if(strstr(nRxData,"B") != NULL){
 286   2          Version = Version_B;
 287   2        }
 288   1        else if(strstr(nRxData,"C") != NULL){
 289   2          Version = Version_C;
 290   2        }
 291   1        while(1){
 292   2          if(nRxData[nRxDataCunt] == ',')
 293   2          break;
 294   2          
 295   2          nRxDataCunt++;
 296   2        }
 297   1        nRxDataCunt++;
 298   1        
 299   1        for(nDataCunt = 0; nDataCunt < 2; nDataCunt++)
 300   1        {
 301   2          nBitCunt = 0;
 302   2          while(1){
C51 COMPILER V9.60.0.0   TRANSLATEDATA                                                     05/06/2023 12:08:18 PAGE 6   

 303   3            if((nRxData[nRxDataCunt] == ',') || (nRxData[nRxDataCunt] == '@'))
 304   3            break;
 305   3            
 306   3            nVBEData[nBitCunt] = nRxData[nRxDataCunt];
 307   3            nBitCunt++;
 308   3            nRxDataCunt++;
 309   3          }
 310   2          nRxDataCunt++;
 311   2          if(nDataCunt == 0){
 312   3            VBE = atoi(nVBEData);
 313   3          }
 314   2          else{
 315   3            Rotation = atoi(nVBEData);
 316   3          }
 317   2          memset(nVBEData,'\0',sizeof(nVBEData));
 318   2        }
 319   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1605    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =    235      51
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
