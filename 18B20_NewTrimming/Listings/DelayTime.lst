C51 COMPILER V9.60.0.0   DELAYTIME                                                         05/06/2023 12:08:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE DELAYTIME
OBJECT MODULE PLACED IN .\Objects\DelayTime.obj
COMPILER INVOKED BY: D:\Software\Keil\C51\BIN\C51.EXE DelayTime.c LARGE OPTIMIZE(4,SPEED) BROWSE DEBUG OBJECTEXTEND PRIN
                    -T(.\Listings\DelayTime.lst) TABS(2) OBJECT(.\Objects\DelayTime.obj)

line level    source

   1          #include <DelayTime.h>
   2          
   3          extern bit bRunStopFlag;
   4          unsigned char nTimer0Cunt = 0;
   5          
   6          void Delay_MS(int nDelayMs) //22.1184MHz 时钟下面延时1ms，示波器下面观察的结果
   7          {
   8   1        int nDelayCunt = 0;
   9   1      
  10   1        AUXR |= 0x80; //定时器0时钟1T模式
  11   1        TMOD &= 0xF0; //设置定时器模式
  12   1        
  13   1        TL0 = 0xCD;   //设置定时初值
  14   1        TH0 = 0xD4;   //设置定时初值
  15   1        TF0 = 0;    //清除TF0标志
  16   1        
  17   1        ET0  = 0x01;
  18   1        TR0  = 0x01;
  19   1        
  20   1        while(1){
  21   2          if(nTimer0Cunt == 2){
  22   3            nTimer0Cunt = 0;
  23   3            nDelayCunt++;
  24   3          }
  25   2      
  26   2          if(nDelayCunt == nDelayMs) // 计时时间到或者是按了Stop键
  27   2          {
  28   3            TR0  = 0x00;
  29   3            ET0  = 0x00;
  30   3            break;
  31   3          }
  32   2        }
  33   1      }
  34          
  35          void Timer0Interrupt (void) interrupt 1 using 3
  36          {
  37   1        nTimer0Cunt++;
  38   1      }
  39          
  40          void Delay_5US(void)
  41          {
  42   1        nTimer0Cunt = 0;
  43   1        
  44   1        AUXR |= 0x80;   //定时器0时钟1T模式
  45   1        TMOD &= 0xF0;   //设置定时器模式
  46   1        TL0 = 0x91;   //设置定时初值
  47   1        TH0 = 0xFF;   //设置定时初值
  48   1        TF0 = 0;    //清除TF0标志
  49   1        
  50   1        ET0  = 0x01;
  51   1        TR0  = 0x01;
  52   1        
  53   1        while(1)
  54   1        {
C51 COMPILER V9.60.0.0   DELAYTIME                                                         05/06/2023 12:08:17 PAGE 2   

  55   2          if(nTimer0Cunt == 1)
  56   2          {
  57   3            TR0  = 0x00;
  58   3            ET0  = 0x00;
  59   3            nTimer0Cunt = 0;
  60   3            break;
  61   3          }
  62   2        }
  63   1      }
  64          
  65          
  66          /*
  67          void Delay_US(unsigned char nTimes)
  68          {
  69            while(nTimes--){
  70              _nop_();
  71              _nop_();
  72              _nop_();
  73              _nop_();
  74              _nop_();
  75              _nop_();
  76              _nop_();
  77              _nop_();
  78              _nop_();
  79              _nop_();
  80              _nop_();
  81              _nop_();
  82            }
  83          }
  84          */
  85          
  86          void Delay_60US(void)
  87          {
  88   1        nTimer0Cunt = 0;
  89   1        
  90   1        AUXR |= 0x80;   //定时器0时钟1T模式
  91   1        TMOD &= 0xF0;   //设置定时器模式
  92   1        TL0 = 0xD1;   //设置定时初值
  93   1        TH0 = 0xFA;   //设置定时初值
  94   1        TF0 = 0;    //清除TF0标志
  95   1        
  96   1        ET0  = 0x01;
  97   1        TR0  = 0x01;
  98   1        
  99   1        while(1)
 100   1        {
 101   2          if(nTimer0Cunt == 1)
 102   2          {
 103   3            TR0  = 0x00;
 104   3            ET0  = 0x00;
 105   3            nTimer0Cunt = 0;
 106   3            break;
 107   3          }
 108   2        }
 109   1      }
 110          
 111          void Delay_600US(void)
 112          {
 113   1        int nDelayCunt = 0;
 114   1      
 115   1        AUXR |= 0x80; //定时器0时钟1T模式
 116   1        TMOD &= 0xF0; //设置定时器模式
C51 COMPILER V9.60.0.0   DELAYTIME                                                         05/06/2023 12:08:17 PAGE 3   

 117   1        TL0 = 0x29;   //设置定时初值
 118   1        TH0 = 0xcc;   //设置定时初值
 119   1        TF0 = 0;    //清除TF0标志
 120   1        
 121   1        ET0  = 0x01;
 122   1        TR0  = 0x01;
 123   1        
 124   1        while(1)
 125   1        {
 126   2          if(nTimer0Cunt == 1)
 127   2          {
 128   3            TR0  = 0x00;
 129   3            ET0  = 0x00;
 130   3            nTimer0Cunt = 0;
 131   3          
 132   3            break;
 133   3          }
 134   2        }
 135   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    180    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
